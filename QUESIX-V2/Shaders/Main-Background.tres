[gd_resource type="ShaderMaterial" load_steps=11 format=2]

[ext_resource path="res://Sprites/bg.png" type="Texture" id=1]

[sub_resource type="VisualShaderNodeScalarOp" id=1]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=2]
input_name = "uv"

[sub_resource type="VisualShaderNodeTexture" id=3]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeVectorFunc" id=4]
function = 20

[sub_resource type="VisualShaderNodeInput" id=5]
input_name = "time"

[sub_resource type="VisualShaderNodeVectorOp" id=6]

[sub_resource type="VisualShaderNodeVectorCompose" id=7]

[sub_resource type="VisualShaderNodeScalarUniform" id=8]
uniform_name = "ScalarUniform"

[sub_resource type="VisualShader" id=9]
code = "shader_type canvas_item;
uniform float ScalarUniform;
uniform sampler2D tex_frg_4;



void vertex() {
// Output:0

}

void fragment() {
// Input:3
	vec3 n_out3p0 = vec3(UV, 0.0);

// Input:6
	float n_out6p0 = TIME;

// ScalarUniform:9
	float n_out9p0 = ScalarUniform;

// ScalarOp:10
	float n_out10p0 = n_out6p0 * n_out9p0;

// VectorCompose:8
	float n_in8p0 = 0.00000;
	float n_in8p2 = 0.00000;
	vec3 n_out8p0 = vec3(n_in8p0, n_out10p0, n_in8p2);

// VectorOp:7
	vec3 n_out7p0 = n_out3p0 + n_out8p0;

// VectorFunc:5
	vec3 n_out5p0 = fract(n_out7p0);

// Texture:4
	vec4 tex_frg_4_read = texture(tex_frg_4, n_out5p0.xy);
	vec3 n_out4p0 = tex_frg_4_read.rgb;
	float n_out4p1 = tex_frg_4_read.a;

// Output:0
	COLOR.rgb = n_out4p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -408.4, 29.5 )
mode = 1
flags/light_only = false
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( -500, 240 )
nodes/fragment/4/node = SubResource( 3 )
nodes/fragment/4/position = Vector2( 140, 200 )
nodes/fragment/5/node = SubResource( 4 )
nodes/fragment/5/position = Vector2( -80, 320 )
nodes/fragment/6/node = SubResource( 5 )
nodes/fragment/6/position = Vector2( -950, 380 )
nodes/fragment/7/node = SubResource( 6 )
nodes/fragment/7/position = Vector2( -300, 320 )
nodes/fragment/8/node = SubResource( 7 )
nodes/fragment/8/position = Vector2( -513, 456 )
nodes/fragment/9/node = SubResource( 8 )
nodes/fragment/9/position = Vector2( -969, 513 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( -700, 440 )
nodes/fragment/connections = PoolIntArray( 4, 0, 0, 0, 5, 0, 4, 0, 7, 0, 5, 0, 3, 0, 7, 0, 8, 0, 7, 1, 6, 0, 10, 0, 9, 0, 10, 1, 10, 0, 8, 1 )

[resource]
shader = SubResource( 9 )
shader_param/ScalarUniform = 0.4
